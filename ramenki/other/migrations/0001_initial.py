# Generated by Django 3.1 on 2020-08-24 19:59

from django.db import migrations, models
import django.db.models.deletion
import image_cropping.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название города')),
                ('phone', models.CharField(max_length=40, verbose_name='Номер телефона')),
                ('geocode_lat', models.FloatField(verbose_name='Гео-код центра города (Широта)')),
                ('geocode_lon', models.FloatField(verbose_name='Гео-код центра города (Долгота)')),
                ('youtube_link', models.CharField(blank=True, help_text='Оставьте поле пустым, чтобы использовать общие ссылки', max_length=100, null=True, verbose_name='Ссылка на ютуб канал (для данного города)')),
                ('facebook_link', models.CharField(blank=True, help_text='Оставьте поле пустым, чтобы использовать общие ссылки', max_length=100, null=True, verbose_name='Ссылка на страницу Фейсбука')),
                ('instagram_link', models.CharField(blank=True, help_text='Оставьте поле пустым, чтобы использовать общие ссылки', max_length=100, null=True, verbose_name='Ссылка на Инстаграм профиль')),
                ('vk_link', models.CharField(blank=True, help_text='Оставьте поле пустым, чтобы использовать общие ссылки', max_length=100, null=True, verbose_name='Ссылка на страницу Вконтакте')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='MetroStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_color', models.CharField(max_length=20, verbose_name='Цвет ветки (hexadecimal)')),
                ('line_name', models.CharField(max_length=100, verbose_name='Название ветки')),
                ('position_in_line', models.IntegerField(verbose_name='Позиция на линии')),
                ('station_name', models.CharField(max_length=100, verbose_name='Название станции')),
            ],
            options={
                'verbose_name': 'Станция метро',
                'verbose_name_plural': 'Станции метро',
            },
        ),
        migrations.CreateModel(
            name='SliderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=400, verbose_name='Заголовок слайда')),
                ('body', models.CharField(max_length=4000, verbose_name='Текст слайда')),
                ('image', models.ImageField(help_text='Возможность обрезки появится после сохранения', upload_to='slider/', verbose_name='Картинка слайда')),
                ('active', models.BooleanField(default=True, help_text='Неактивные слайды не будут отображаться на главной странице', verbose_name='Активен')),
                ('crop_mobile', image_cropping.fields.ImageRatioField('image', '320x594', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='Обрезка изображения (Мобильные)')),
                ('crop_tablet', image_cropping.fields.ImageRatioField('image', '756x504', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='Обрезка изображения (Планшет)')),
                ('crop_index', image_cropping.fields.ImageRatioField('image', '687x458', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='Обрезка изображения (Обычный)')),
                ('crop_wide', image_cropping.fields.ImageRatioField('image', '1105x628', adapt_rotation=False, allow_fullsize=False, free_crop=False, help_text=None, hide_image_field=False, size_warning=False, verbose_name='Обрезка изображения (Широкий)')),
            ],
            options={
                'verbose_name': 'Слайд',
                'verbose_name_plural': 'Слайды',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Необязательное поле. При отсуствии названия будет выводиться номер филиала', max_length=200, null=True, verbose_name='Название филиала')),
                ('no', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50)], unique=True, verbose_name='Номер')),
                ('custom_metro_station', models.CharField(blank=True, max_length=400, null=True, verbose_name='Метро (ручной ввод)')),
                ('address', models.CharField(max_length=400, verbose_name='Адрес')),
                ('website', models.CharField(default='', max_length=1000, verbose_name='Сайт филиала')),
                ('email', models.EmailField(default='', max_length=200, verbose_name='Email филиала')),
                ('phone', models.CharField(max_length=50, verbose_name='Телефон')),
                ('geocode_lat', models.FloatField(verbose_name='Гео-код (Широта)')),
                ('geocode_lon', models.FloatField(verbose_name='Гео-код (Долгота)')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='other.city', verbose_name='Город')),
                ('moscow_metro_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='other.metrostation', verbose_name='Метро (выбор только для Москвы)')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
                'ordering': ('no',),
            },
        ),
    ]
